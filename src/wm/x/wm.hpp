#pragma once
#include <wayland-server.h>
#include <EGL/egl.h>
#include <xcb/xcb.h>
#include <xcb/xcb_icccm.h>

namespace Awning::X
{
	enum atom_name {
		WL_SURFACE_ID,
		WM_DELETE_WINDOW,
		WM_PROTOCOLS,
		WM_HINTS,
		WM_NORMAL_HINTS,
		WM_SIZE_HINTS,
		WM_WINDOW_ROLE,
		_MOTIF_WM_HINTS,
		UTF8_STRING,
		WM_S0,
		NET_SUPPORTED,
		NET_WM_CM_S0,
		NET_WM_PID,
		NET_WM_NAME,
		NET_WM_STATE,
		NET_WM_WINDOW_TYPE,
		WM_TAKE_FOCUS,
		WINDOW,
		_NET_ACTIVE_WINDOW,
		_NET_WM_MOVERESIZE,
		_NET_WM_NAME,
		_NET_SUPPORTING_WM_CHECK,
		_NET_WM_STATE_MODAL,
		_NET_WM_STATE_FULLSCREEN,
		_NET_WM_STATE_MAXIMIZED_VERT,
		_NET_WM_STATE_MAXIMIZED_HORZ,
		_NET_WM_PING,
		WM_STATE,
		CLIPBOARD,
		PRIMARY,
		WL_SELECTION,
		TARGETS,
		CLIPBOARD_MANAGER,
		INCR,
		TEXT,
		TIMESTAMP,
		DELETE,
		NET_WM_WINDOW_TYPE_NORMAL,
		NET_WM_WINDOW_TYPE_UTILITY,
		NET_WM_WINDOW_TYPE_TOOLTIP,
		NET_WM_WINDOW_TYPE_DND,
		NET_WM_WINDOW_TYPE_DROPDOWN_MENU,
		NET_WM_WINDOW_TYPE_POPUP_MENU,
		NET_WM_WINDOW_TYPE_COMBO,
		NET_WM_WINDOW_TYPE_MENU,
		NET_WM_WINDOW_TYPE_NOTIFICATION,
		NET_WM_WINDOW_TYPE_SPLASH,
		DND_SELECTION,
		DND_AWARE,
		DND_STATUS,
		DND_POSITION,
		DND_ENTER,
		DND_LEAVE,
		DND_DROP,
		DND_FINISHED,
		DND_PROXY,
		DND_TYPE_LIST,
		DND_ACTION_MOVE,
		DND_ACTION_COPY,
		DND_ACTION_ASK,
		DND_ACTION_PRIVATE,
		_NET_CLIENT_LIST,
		ATOM_LAST,
	};

	extern EGLDisplay egl_display;
	extern wl_client* xWaylandClient;
	extern void* surface;

	void Init();
	int EventLoop(int fd, uint32_t mask, void *data);
	int EventLoop();
}